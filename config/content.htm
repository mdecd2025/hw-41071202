<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-41071202/content/index.html">https://mdecd2025.github.io/hw-41071202/content/index.html</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-41071202">https://github.com/mdecd2025/hw-41071202</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>Tasks</h1>
<p>task1 與 task2 任務目的在建立可於近端維護個人作業與協同作業的準備工作:</p>
<p>      task1 (自行製作可攜程式系統)</p>
<p>      task2 (使用 SSH 協定執行作業倉儲的推送)</p>
<p>task3 與 task4 則為 HW2 的內容之一</p>
<p>      task3 (使用 Solvespace 建立平面四連桿系統零組件)</p>
<p>      task4 (使用 Onshape 建立平面四連桿系統零組件)</p>
<p>task5 與 task6 則為 HW3 的主要內容</p>
<p>      task5 (Webots Tutorial 1 ~3)</p>
<p>      task6 (Webots Tutorial 4 ~6)</p>
<h2>Wink</h2>
<p>操作影片：</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="solvespace" height="630" muted="true" width="1008">
<source src="./../downloads/solvespace.mp4" type="video/mp4"/></video></div>
<h2>task1</h2>
<h4><strong>自行製作可攜程式系統</strong></h4>
<p>操作影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/27CCwDkHLdk?si=rqW1euTloHezPuZf" title="YouTube video player" width="560"></iframe></p>
<h3>repo</h3>
<p><span>此作業的目的在展示如何利用既有的 Python 可攜系統建立各版本的 Python 可攜環境</span></p>
<p>操作影片：</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/JTIMoSU0c1E?si=Xk87nV15fE3aEcVP" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>說明如何取得個人作業倉儲並透過 TOKEN 修改內容：</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/MOzmEpUE8UY?si=j8rwzhn2-n3_qpbo" title="YouTube video player" width="560"></iframe></p>
<h3>list</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2b.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "&lt;=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 &lt;= "1. " + html.A("2b-g8", href="https://mdecd2025.github.io/2b-g8/")+ html.A("(repo)", href="https://github.com/mdecd2025/2b-g8")
# 利用 html.BR() 插入 break 標註
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "2. " + html.A("41023215", href="https://mdecd2025.github.io/hw-41023215/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023215")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "3. " + html.A("41023216", href="https://mdecd2025.github.io/hw-41023216/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023216")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "4. " + html.A("41023213", href="https://mdecd2025.github.io/hw-41023213/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023213")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "5. " + html.A("41071203", href="https://mdecd2025.github.io/hw-41071203/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071203")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "6. " + html.A("41071204", href="https://mdecd2025.github.io/hw-41071204/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071204")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "7. " + html.A("41071202", href="https://mdecd2025.github.io/hw-41071202/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071202")
</pre>
<div class="line number1 index0 alt2">
<p>個人:</p>
<p></p>
<p>2b:</p>
<p><span><a href="https://mdecd2025.github.io/hw-41071202/content/index.html">學員網站連結</a> | <a href="https://github.com/mdecd2025/hw-41071202">學員倉儲連結</a></span></p>
<p>分組:</p>
<p></p>
<p>2b:</p>
<p><a href="https://mdecd2025.github.io/2b-g8/content/index.html">g8 網站</a> | <a href="https://github.com/mdecd2025/2b-g8">g8 倉儲</a></p>
<p></p>
<p><a href="https://mdecd2025.github.io/hw-41071202/content/Brython?src=https://gist.githubusercontent.com/41071202/607dbd816121cd9e5a688a76e743e0d1/raw/30781cdab3175e39a197d510df1e95cd1e27e71a/t.py">所有倉儲及網站連結</a></p>
</div>
<h3>IPv6</h3>
<p>以下為設定個人 IPv6 之步驟：</p>
<p>1.在可攜環境裡的 tmp 新增資料夾</p>
<p>2.設定個人 IPv6 位址與 DNS 伺服器位址</p>
<p>   2a 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:a0<span style="background-color: #ffff00;">01</span><br/>   2b 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:b0<span style="background-color: #ffff00;">01</span><br/>   gateway: 2001:288:6004:17::254<br/>   dns server:<br/>   2001:288:6004:17::3<br/>   2001:b000:168::1</p>
<p>3.開啟 init.py 更改 IP</p>
<p>4.在<span>命令列裡打 cms 之指令</span></p>
<p>5.此網址為個人位址的學員網站(9441)</p>
<p>6.打 <span>python -m http.server 之指令</span></p>
<p><span>7.連到學員靜態網站(8000)</span></p>
<p>操作影片：</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/4gnOYzUXW9Q?si=RQfbryu6y5LEIJ55" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/41071202/28bf1d3d52c65537363143ced4101a4d/raw/f3b6a11fccf870ab1767f659714df862da450b44/8000.py">2b IPv6 port 8000連線列表</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/41071202/1ceb66337fced2ee003700c7ffee3135/raw/637fd3d8fc23931154b81ead44df5c6b43bd87ae/8000_1.py">連線結果</a></p>
<h2>task2</h2>
<p><strong>使用 SSH 協定執行作業倉儲的推送</strong></p>
<p><a href="https://zh.wikipedia.org/zh-tw/Secure_Shell">SSH</a><span> </span>是一種加密的網路傳輸協定, PuTTY 則是可用於 Windows 環境的 SSH 協定工具, 其中支援遠端登入 (putty.exe) 與檔案傳輸工具 (psftp.exe).</p>
<p>使用 PuTTY 所建立的公私鑰進行 Github push 認證</p>
<p>操作影片：</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/gl8Lv_LKwH8?si=e59Rg6OTq4SpbW-4" title="YouTube video player" width="560"></iframe></p>
<h3>w3</h3>
<p><a href="https://mdecd2025.github.io/hw-41071202/content/Brython?src=https://gist.githubusercontent.com/41071202/53380e76dea085b45eb61fe3359901d5/raw/3aa28efe8457b38a15aa09515eca7f2555079a69/2a.py">2a</a></p>
<p><span>2a尚未納組的學員學號：</span></p>
<p><span>41023220<br/>41223111<br/>41223119<br/>41223124<br/>41223148</span></p>
<p><a href="https://mdecd2025.github.io/hw-41071202/content/Brython?src=https://gist.githubusercontent.com/41071202/c4a7c3d68fdd387a6df69df75740ad11/raw/40c88bdaaa20a2ba8865e9c42b7d1228cca10241/2b.py">2b</a></p>
<p><span>2b尚未納組的學員學號：</span></p>
<p><span>40923137<br/>41023237<br/>41223210<br/>41223214<br/>41223232<br/>41223233<br/>41223239<br/>41271217<br/>41271236</span></p>
<h2>task3</h2>
<p><strong>使用 Solvespace 建立平面四連桿系統零組件 (HW2)</strong></p>
<p>base</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/kPKWNX9ZGaA?si=TwpUQu5O7svB7Ens" title="YouTube video player" width="560"></iframe></p>
<p>link1</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dxL1ZuTHUxc?si=LRuhTCbuggg8Yo0Z" title="YouTube video player" width="560"></iframe></p>
<p>link2</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/lBO52uYuCT4?si=el7BrlYI2hiymVzb" title="YouTube video player" width="560"></iframe></p>
<p>link3</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/1GrrtyM9FVk?si=zRK8o9gbuMcPPPqm" title="YouTube video player" width="560"></iframe></p>
<p>shaft1</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ZY9QBNkRYoE?si=9-U8MQSQNoI5FtoN" title="YouTube video player" width="560"></iframe></p>
<p>shaft2</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/vyAmNv9iDQo?si=YOxP-730ADDDojBC" title="YouTube video player" width="560"></iframe></p>
<p>fourbar</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/zpvxRWF4T8g?si=lWTFEotlaRrPMZIX" title="YouTube video player" width="560"></iframe></p>
<p>fourbar assembly</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/5CrGechsGao?si=iCKDXSYcc8VNOZJr" title="YouTube video player" width="560"></iframe></p>
<h2>task4</h2>
<p><strong>使用 Onshape 建立平面四連桿系統零組件 (HW2)</strong></p>
<p>1.在 onshape 上繪製零件</p>
<p>2.將零件檔匯出成 <span style="background-color: #ffff00;">.OBJ</span></p>
<p>3.在 webots 上組裝零件</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/MJviIA1l56k?si=0yM0qv6k9XzKAUpb" title="YouTube video player" width="560"></iframe></p>
<p>調整後之結果</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/s94KvKPZ4SY?si=YxuU1OZ_eyevzvKp" title="YouTube video player" width="560"></iframe></p>
<h3>w4</h3>
<p>建立四連桿機構</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/yiHF8950Vrc?si=JEa40noUoVWuEnmO" title="YouTube video player" width="560"></iframe></p>
<p>調整參數後之結果</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/v8NvJuG3sGE?si=4J3dI5kuzIJMlYGm" title="YouTube video player" width="560"></iframe></p>
<h2>task5</h2>
<p></p><h3>w7</h3>
<p>shaft1</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/F7YKugP7Thc?si=E4cTmbZ2p0rAhW0m" title="YouTube video player" width="560"></iframe></p>
<p><span>shaft2</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/puFlxaM3L-Q?si=zyQouxnCMoHr4YNq" title="YouTube video player" width="560"></iframe></p>
<p><span>shaft3</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/OnjCCnLZ-w8?si=ZzpKCoioA5dRDRmS" title="YouTube video player" width="560"></iframe></p>
<p><span>shaft4</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/L1-QNcua_Vo?si=KAUP_JZ_kSd84nh1" title="YouTube video player" width="560"></iframe></p>
<p>base plate</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/sy7JxFsq3Zg?si=kywCfItXSqjp3S5H" title="YouTube video player" width="560"></iframe></p>
<p>connected board</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/C_N-_PC7yKo?si=3BSobIyACu_2326N" title="YouTube video player" width="560"></iframe></p>
<p>press board</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/POCdh_DLOXs?si=VA-D9wZnme11DQbv" title="YouTube video player" width="560"></iframe></p>
<p>shooter board</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/PGjL9XdYAO0?si=jbyCprTiMX4QVt0u" title="YouTube video player" width="560"></iframe></p>
<p>shooter assembly</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/A0pB0KF89Zw?si=rVykYj47CRplOBHD" title="YouTube video player" width="560"></iframe></p>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 41071202</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/N7LZvKsvtLk?si=RGUGeO_qDgwxC-J2" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/hw1.zip">hw1.zip</a></p>
<p>相關提問:</p>
<p><strong>1.在製作 HW1 之前是否實際練習 Tutorial1 與 Tutorial2?</strong></p>
<p>這兩個教程能幫助我熟悉 Webots 的基本操作、機器人控制邏輯與感測器使用</p>
<p><strong>2.Webots 是什麼樣的軟體？它主要用途為何？</strong></p>
<p>是一款開源機器人模擬平台，主要用途為教學與學習機器人技術、研究與原型開發、測試控制演算法、開發智慧行為</p>
<p><strong>3.在 Tutorial1 中，學習者需要操作的主要機器人模型名稱是什麼？</strong></p>
<p>通常是 e-puck 或 Pioneer 3-DX</p>
<p><strong>4.如何在 Webots 中建立並執行一個新的模擬世界（world）？</strong></p>
<ol>
<li>開啟 Webots → 點選 File &gt; New World</li>
<li>使用左側「場景樹」加入機器人與感測器</li>
<li>存檔為 .wbt 檔</li>
<li> 點選綠色播放鍵（Run simulation）開始執行模擬</li>
</ol>
<p><strong>5.請說明如何讓機器人在模擬中移動，並指出相關的程式控制方式。</strong></p>
<p>透過控制器的程式碼讓機器人移動；需要先用 getDevice() 抓取馬達，再設定速度</p>
<p><strong>6.Tutorial1 中，學習者需要修改哪些參數或檔案來控制機器人的行為？</strong></p>
<ol>
<li>控制器程式碼</li>
<li>馬達速度</li>
<li>timestep </li>
<li>感測器啟用</li>
</ol>
<p></p>
<p><strong>7.請簡述 Webots 控制器（controller）的功能及其與機器人的關係。</strong></p>
<p>控制器是一段程式碼，負責告訴機器人怎麼移動、偵測距離等；每個機器人都可以指定一個控制器</p>
<p><strong>8.在 Tutorial2 中，機器人需要完成什麼樣的任務或行為？</strong></p>
<ol>
<li>使用感測器偵測障礙物</li>
<li>自主避障</li>
<li>改變移動方向</li>
</ol>
<p></p>
<p><strong>9.Webots 中的 "Supervisor" 是什麼？它與一般機器人控制器有何不同？</strong></p>
<p>是特殊的控制器，可控制整個模擬世界；一般控制器只能控制自己所屬機器人</p>
<p><strong>10.請說明如何在 Webots 中進行感測器數據的讀取與應用（例如距離感測器、攝影機）。</strong></p>
<p>sensor = robot.getDevice()<br/>sensor.enable(timestep)<br/>value = sensor.getValue()</p>
<p><strong>11.若要延伸 Tutorial2 讓機器人具備自主避障能力，你會怎麼設計與實作？</strong></p>
<p>利用以下三點做設計改變</p>
<ol>
<li>啟用距離感測器</li>
<li>設定閾值</li>
<li>判斷感測值是否小於閾值 → 調整輪子速度</li>
</ol>
<p></p>
<p><strong>12.請說明 Webots 中「時間步長（timestep）」的意義，以及它對模擬的影響。</strong></p>
<p>模擬的更新頻率，單位是毫秒，太大會降低模擬精度，太小則會影響效能。</p>
<p><strong>13.如何在 Webots 中為機器人新增感測器？請說明基本步驟。</strong></p>
<ol>
<li>編輯 .wbt或使用場景樹新增感測器</li>
<li>在控制器中啟用感測器 sensor.enable(timestep)</li>
<li>使用 getValue() 或其他讀值函式取得數據</li>
</ol>
<p></p>
<p><strong>14.請說明如何將 Webots 控制器程式從 Python 改為 C 語言，並指出相關設定。</strong></p>
<ol>
<li>建立 .c 控制器檔</li>
<li>在機器人屬性中修改 controller 名稱</li>
<li>設定 Makefile 編譯方式</li>
<li>運行模擬，Webots 會自動執行該 C 控制器</li>
</ol>
<p></p>
<p><strong>15.Tutorial1、2 中，若控制器程式有語法錯誤時，Webots 會如何反應？學員該如何排除？</strong></p>
<p>會在 console 中顯示錯誤訊息且機器人不執行行為，從錯誤訊息找到問題再去改程式碼</p>
<p></p>
<p><strong>16.如何將 Webots 世界（world）或機器人設定檔分享給他人，確保對方可順利開啟模擬？</strong></p>
<ol>
<li>打包 .wbt 檔與 controllers/、split_parts/ 等資料夾</li>
<li>壓縮成 ZIP 檔</li>
<li>對方打開 .wbt 即可使用</li>
</ol>
<p></p>
<p><strong>17.如果想讓機器人在模擬時產生聲音或播放音樂，Webots 提供哪些方法？</strong></p>
<p>使用 Speaker裝置</p>
<p><strong>18.請說明如何在 Webots 中同時操作多個機器人，並讓它們各自執行不同控制器。</strong></p>
<p>機器人指定不同 controller，就能同時操作</p>
<p><strong>19.在 Webots 控制器中，如何獲得機器人的當前座標位置與朝向？</strong></p>
<p>使用 GPS 或 Supervisor</p>
<p><strong>20.請說明 Webots 控制器中感測器資料的單位（例如距離感測器、加速度計），以及如何正確解讀。</strong></p>
<ol>
<li>距離感測器：通常為模擬單位</li>
<li>GPS：公尺</li>
<li>加速度計：m/s²</li>
<li>海拔計：m（相對地面）</li>
</ol>
<p></p>
<p><strong>21.如果想要錄製 Webots 模擬畫面並輸出成影片檔，該如何操作？</strong></p>
<ol>
<li>Simulation &gt; Movie &gt; Start Recording，錄完後選擇 Save Movie 匯出 .mp4</li>
<li>用 sharex、OBS 等軟體錄製</li>
</ol>
<p></p>
<p><strong>22.Webots 中的 PROTO 文件有什麼作用？與 world 檔（.wbt）的關係為何？</strong></p>
<p>.proto：定義可重用的機器人/元件模板；.wbt可引用 .proto 元件</p>
<p></p>
<p></p>
<p><strong>23.請說明如何在 Webots 中設定機器人的初始位置和方向。</strong></p>
<p>在場景樹中編輯 translation 和 rotation 的參數</p>
<p><strong>24.在 Tutorial1 或 Tutorial2 中，如何讓機器人執行預設外的自訂動作？</strong></p>
<p>可設計狀態機或加入觸發邏輯</p>
<p><strong>25.Webots 支援哪些主流程控制語言？各有何優缺點？</strong></p>
<ol>
<li>Python：簡單易學，適合初學者</li>
<li>C/C++：效能高、可擴充性強</li>
<li>Java、MATLAB：在特定應用中適用</li>
</ol>
<p></p>
<p><strong>26.機器人控制器程式如何與其他程式（如資料記錄、遠端伺服器）進行通訊？</strong></p>
<p>使用 TCP/IP、WebSocket、或檔案 I/O 可與遠端伺服器通訊</p>
<p></p>
<p><strong>27.Webots 的模擬世界中燈光和陰影設定如何影響感測器或相機的數據？</strong></p>
<p>光線不足會影響相機或光度計讀值</p>
<p><strong>28.如何在 Webots 中調整機器人或感測器的物理參數（如質量、摩擦係數）？</strong></p>
<p>物件的 physics 可進行調整</p>
<p><strong>29.請說明如何使用 Webots 的 Console 與 Debug 工具協助程式錯誤排除。</strong></p>
<ol>
<li>用 print() 查看變數值</li>
<li>用 step() 一步步執行模擬</li>
</ol>
<p></p>
<p></p>
<p><strong>30.Tutorial1、2 裡的機器人遇到物體時，碰撞偵測機制如何運作？</strong></p>
<p>當物體發生物理碰撞時，可透過感測器讀取是否碰到物件</p>
<p><strong>31.若要將 Webots 模擬結果導出並進行數據分析，你會選擇哪些方法與工具？</strong></p>
<p>先在控制器中寫入 .csv 或 .txt 檔，在用 Python 匯出感測器資料 → 用 Excel、Pandas 分析</p>
<p></p><h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 41071202</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/6st7QT8OaXY?si=4U6oH2TCHb6y03YF" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/hw2.zip">hw2.zip</a></p>
<p><span style="background-color: #ffcc00;">Tutorial3 相關提問:</span></p>
<p><strong>1.Tutorial3 的主要學習目標是什麼？</strong></p>
<p>學習使用地面感測器讓機器人辨識地面顏色，並根據偵測結果做出反應</p>
<p><strong>2.在 Tutorial3 中，如何讓機器人偵測地面顏色？</strong></p>
<p>透過機器人底部的 ground sensors 讀取地面反射的光強度，判斷是否為特定顏色</p>
<p><strong>3.Ground sensors 在 Webots 裡的作用為何？</strong></p>
<p>辨識地面顏色，應用在巡線、區域判斷</p>
<p><strong>4.如何在程式中取得 ground sensor 的數值？</strong></p>
<p>sensor.getValue() 取得感測值</p>
<p><strong>5.Tutorial3 中的 e-puck 機器人如何根據地面顏色改變行為？</strong></p>
<p>依照不同感測器數值決定前進、轉向或停</p>
<p><strong>6.為什麼要對 ground sensor 的數值進行校正（calibration）？</strong></p>
<p>每個感測器在不同材質下的反射值不同，校正有助於準確偵測黑白界線，提高行為決策的可靠度</p>
<p><strong>7.如何設定 ground sensor 的 sampling period？</strong></p>
<p>使用 sensor.enable(time_step)</p>
<p><strong>8.e-puck 機器人可以偵測哪些顏色？如何判斷？</strong></p>
<p>主要為黑與白，低值為黑，高值為白，設閾值判斷</p>
<p><strong>9.Tutorial3 如何讓 e-puck 在遇到黑線時做出反應？</strong></p>
<p>若感測值低於某值（如 &lt;500）則進行轉向或停止</p>
<p><strong>10.若地面顏色偵測判斷有誤，可能原因有哪些？</strong></p>
<p>校正問題、光影干擾、地面材質影響、感測器未啟用</p>
<p><span style="background-color: #ffcc00;">Tutorial4 相關提問:</span></p>
<p><strong>1.Tutorial4 的核心任務是什麼？</strong></p>
<p>學習使用距離感測器來偵測前方或側邊的障礙物</p>
<p><strong>2.如何讓機器人偵測牆壁或障礙物？</strong></p>
<p>利用側邊或前方感測器感知距離</p>
<p><strong>3.Webots 的距離感測器（DistanceSensor）如何運作？</strong></p>
<p>發射紅外線，接收反射，距離越近值越大</p>
<p><strong>4.如何在程式中啟用並讀取 DistanceSensor 的數值？</strong></p>
<p>使用sensor.getValue()</p>
<p><strong>5.Tutorial4 中，e-puck 機器人如何實作避障行為？</strong></p>
<p>根據感測數值高低控制輪速轉向</p>
<p><strong>6.距離感測器數值的單位是什麼？如何轉換？</strong></p>
<p>數值是無單位的比例，越近值越高；若要轉換成距離（mm/cm）</p>
<p><strong>7.如何設定距離感測器的 sampling period？</strong></p>
<p><span>使用s</span><span>ensor</span>.enable(time_step)</p>
<p><strong>8.當機器人同時偵測到左、右兩側有障礙物時，應如何設計行為？</strong></p>
<p>可後退再隨機轉向，或設優先方向</p>
<p><strong>9.為什麼避障時要考慮多個感測器的數值？</strong></p>
<p>提高判斷精準度，確定障礙方向與位置</p>
<p><strong>10.Tutorial4 若機器人無法正確避障，可能的解決方法有哪些?</strong></p>
<p>感測器未啟用、閾值錯誤、邏輯錯、無碰撞模型</p>
<p><span style="background-color: #ffcc00;">Tutorial5 相關提問:</span></p>
<p><strong>1.Tutorial5 的主要內容主題為何？</strong></p>
<p>整合地面與距離感測器，完成更複雜任務</p>
<p><strong>2.如何讓機器人依照不同地面顏色或障礙物狀態做出不同反應？</strong></p>
<p>根據地面顏色或障礙物切換行為（巡線、避障）</p>
<p><strong>3.Tutorial5 中如何結合多種感測器進行複雜任務？</strong></p>
<p>同時讀取多感測器數值，條件判斷切換狀態</p>
<p><strong>4.如何設計機器人巡線並同時避障？</strong></p>
<p>巡線時遇障礙切換避障，避完後恢復巡線</p>
<p><strong>5.若多種感測器回報衝突訊息，程式該如何決策？</strong></p>
<p>設計優先順序或使用有限狀態機（FSM）管理流程</p>
<p><strong>6.在 Tutorial5 裡，機器人如何完成任務流程的狀態切換？</strong></p>
<p>設定變數表示狀態，依條件改變狀態值</p>
<p><strong>7.如何在程式中設計有限狀態機（FSM）？</strong></p>
<p>用 if 或 match-case 結構撰寫控制邏輯</p>
<p><strong>8.Tutorial5 的挑戰題目有哪些？如何著手解決？</strong></p>
<p>在複雜地圖巡線避障或回到起點；明確定義狀態、逐步測試感測器與行為邏輯，加入偵錯輸出以監控狀態變化</p>
<p><strong>9.若要讓機器人自主完成一個完整路徑的巡邏任務，應加入哪些功能？</strong></p>
<p>路線記憶、狀態控制、回報任務點、環境識別等</p>
<p><strong>10.綜合 Tutorial3~5，請說明感測器資料融合（sensor fusion）的意義與應用。</strong></p>
<p>將多種感測器資料整合後再進行決策，提高準確性與穩定性，彌補單一感測器侷限；同時進行巡線與避障，可減少錯誤決策、提升自動化能力</p>
<p></p><h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 41071202</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/F3-YU-pUmgI?si=zMT3v9LkJ4_-pQlv" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/hw3.zip">hw3.zip</a></p>
<p><span style="background-color: #ffcc00;">Tutorial6 相關提問:</span></p>
<p><strong>1.Tutorial6 的主要學習主題是什麼？</strong></p>
<p>學習如何使用攝影機感測器</p>
<p><strong>2.在 Tutorial6 中，e-puck 機器人新增了哪些裝置？</strong></p>
<p>新增了攝影機感測器，用來捕捉前方環境的影像</p>
<p><strong>3.如何在 Webots 中使用攝影機（Camera）？</strong></p>
<p>在 Robot 下加入 Camera 節點，設定位置與方向，並在控制器程式中透過 API 啟用並讀取影像資料</p>
<p><strong>4.Camera 需要在程式中如何啟用？</strong></p>
<p>必須呼叫 camera.enable(timeStep) 函式來啟用</p>
<p><strong>5.如何取得攝影機擷取到的影像資料？</strong></p>
<p>使用 camera.getImage() 方法取得原始影像資料，或者 camera.getImageArray() 取得更方便處理的陣列形式</p>
<p><strong>6.Tutorial6 中，機器人如何依據攝影機影像做出反應？</strong></p>
<p>程式會分析影像像素的顏色或圖案資訊，判斷環境狀況或物件位置，並根據判斷結果調整機器人的行動</p>
<p><strong>7.Camera 裝置可以調整哪些參數？</strong></p>
<p>可調整解析度、視野角度、更新頻率，以及是否啟用自動曝光等</p>
<p></p>
<p><strong>8.影像解析度的設定會對模擬有什麼影響？</strong></p>
<p>解析度越高影像越清晰，但會增加運算負擔和延遲，降低模擬效率；解析度太低則影像細節不足</p>
<p><strong>9.如何將攝影機影像儲存成圖片檔？</strong></p>
<p>透過控制器程式讀取影像資料後，使用影像處理庫將影像資料轉成檔案格式並儲存</p>
<p><strong>10.若攝影機影像顯示異常，可能的原因有哪些？</strong></p>
<p>可能沒有正確啟用攝影機、時間步長設置錯誤、影像解析度不適合、模擬環境光源不足，或是程式錯誤導致影像資料未正常讀取</p>
<p><span style="background-color: #ffcc00;">Tutorial7 相關提問:</span></p>
<p><strong>1.Tutorial7 的核心任務是什麼？</strong></p>
<p>讓機器人學會利用攝影機辨識並追蹤特定顏色物體</p>
<p><strong>2.在本範例中 e-puck 機器人如何偵測顏色？</strong></p>
<p>透過擷取攝影機影像，分析像素的 RGB 值，篩選出特定顏色範圍的像素點來判斷顏色位置</p>
<p><strong>3.如何分析攝影機擷取的影像來辨識特定顏色？</strong></p>
<p>將影像從 RGB 空間轉換到 HSV 空間，利用 HSV 中的色調、飽和度和明度設定顏色範圍，篩選符合顏色條件的區域</p>
<p><strong>4.OpenCV 或其他影像處理函式庫在 Webots 控制器程式中的應用方式？</strong></p>
<p>可以在控制器程式中引入 OpenCV，使用其強大的影像處理功能來做顏色篩選、物件追蹤、形狀辨識等，增加影像分析的精確度</p>
<p><strong>5.如何將影像中的顏色資訊轉換為機器人行為？</strong></p>
<p>根據辨識到的顏色物件位置，調整機器人的移動方向或速度，實現追蹤或避障等行為</p>
<p><strong>6.若要辨識多種顏色，程式需考慮哪些步驟？</strong></p>
<p>需設定多個顏色範圍的 HSV 閾值，分別篩選不同顏色，再根據辨識結果決定優先追蹤的顏色或同時處理多色物件</p>
<p></p>
<p><strong>7.如何解決不同光源下顏色偵測的不穩定問題？</strong></p>
<p>利用 HSV 色彩空間可減少光照影響，調整色彩閾值範圍，或搭配自動白平衡與光照補償技術，提高辨識穩定性</p>
<p><strong>8.e-puck 機器人如何追蹤影像中的顏色物件？</strong></p>
<p>程式計算目標顏色區域的質心位置，透過調整左右輪速度讓目標保持在影像中心</p>
<p><strong>9.若影像中有多個同色物件，程式如何選擇追蹤目標？</strong></p>
<p>可選擇面積最大的區域、距離中心最近的區域，或依任務需求設定優先條件來決定追蹤哪個物件</p>
<p><strong>10.Tutorial7 能否應用於現實世界的機器人？需做哪些調整？</strong></p>
<p>能，但須針對真實環境調整顏色閾值、光照補償，且硬體部分需確保攝影機性能及運算能力足夠</p>
<p><span style="background-color: #ffcc00;">Tutorial8 相關提問:</span></p>
<p><strong>1.Tutorial8 的主要學習目標是什麼？</strong></p>
<p>學習使用 Supervisor 節點監督整個模擬環境，操控多個機器人，實現模擬監控、自動重置與資料紀錄等功能</p>
<p><strong>2.什麼是 Supervisor？在 Tutorial8 扮演什麼角色？</strong></p>
<p>Supervisor 是一種特殊的控制器，能夠監控和操控模擬世界中的所有物件，協調多機器人的行為並執行高層次控制</p>
<p><strong>3.Supervisor 可以進行哪些操作？</strong></p>
<p>取得物件位置、修改物件狀態、重設機器人位置、讀取並寫入模擬環境資料、紀錄數據、控制模擬流程等</p>
<p><strong>4.如何在 Supervisor 控制器中存取並控制其他機器人？</strong></p>
<p>透過 getFromDef() 取得指定機器人節點，並使用 API 控制其位置、狀態或調用方法</p>
<p><strong>5.如何用 Supervisor 監測機器人是否達到目標區域？</strong></p>
<p>定期讀取機器人位置資訊，判斷是否進入目標區域的座標範圍，並根據結果執行後續動作</p>
<p><strong>6.Supervisor 如何重設模擬或重置機器人位置？</strong></p>
<p>使用 supervisor.simulationReset() 重置模擬，或透過改變機器人節點的座標屬性來重置位置</p>
<p><strong>7.Supervisor 能否獲取所有物件的座標與狀態？如何實作？</strong></p>
<p>可以，使用 getRoot() 取得場景樹，再透過節點遍歷取得所有物件的資訊</p>
<p><strong>8.如何紀錄機器人模擬過程的數據供日後分析？</strong></p>
<p></p>
<p>Supervisor 可以在控制器中寫入資料到檔案，如座標、狀態、感測器讀數等，保存模擬紀錄</p>
<p><strong>9.Supervisor 可以如何協助自動化測試機器人行為？</strong></p>
<p></p>
<p>透過腳本自動控制場景、監控行為達成狀況、自動重置環境並記錄結果，實現測試流程的自動化</p>
<p><strong>10.綜合 Tutorial6~8，請說明感知（感測）、決策（控制器）、監督（Supervisor）三者如何協同運作。</strong></p>
<p>感知：透過攝影機等感測器擷取環境資料，讓機器人能看見周圍狀況</p>
<p>決策：控制器分析感測資料，做出行為判斷與決策，控制機器人移動、避障或追蹤目標</p>
<p>監督：Supervisor 監控整體模擬狀況，可同時管理多個機器人，負責協調任務流程、重置環境及紀錄數據</p>
<p></p><h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>w1 建立個人倉儲與網站</p>
<p>w2 自行製作可攜程式系統</p>
<p>w3 利用 wink 錄製 solvespace 操作影片</p>
<p>w4 IPv6 位址設定</p>
<p>w5 webots 建立四連桿(HW1)</p>
<p>w6 <span>webots 建立四連桿(HW1)、未納組名單</span></p>
<p>w7 webots 匯入四連桿(HW2)</p>
<p>w8 在 solvespace 組合投籃機(HW3)</p>
<p><span>w9 上傳自評影片與心得</span></p>
<p>各週網頁內容:</p>
<p>w1 建立個人倉儲與網站</p>
<p>w2 新增個人與小組的倉儲、網站連結、<span>上傳製作可攜程式系統影片</span></p>
<p>w3 利用 wink 錄製 solvespace 操作影片</p>
<p>w4 增加各學員的<span>倉儲與網站連結</span></p>
<p>w6 上傳 <span>webots 建立四連桿(HW1)、IPv6 位址設定、repo、SSH、未納組名單 操作影片</span></p>
<p>w7 上傳在 <span>solvespace、webots  組合四連桿(HW2)操作影片</span></p>
<p>w8 <span>上傳在 </span><span>solvespace</span><span> 組合投籃機(HW3)操作影片</span></p>
<p>w9 上傳自評影片與心得</p>
<p>期中心得:</p>
<p>自製可攜程式系統是我第一個作業，看著教學影片和詢問組員，花了很多時間才完成，過程雖然辛苦但有滿滿的成就感，接下來的ssh和IPv6的設定做起來就比較容易，其他需要寫程式的作業，大部分都尋求AI的幫忙，後面幾週需要畫圖的只能靠自己了，作業一真的好難，跟同學研究很久還是沒辦法，最後跑去問老師才得到解答，老師也在下週進行詳細的說明，完成後發現並沒有想像中難，第一根會了其他根的步驟都差不多，作業二的零件是用匯入的，不用在webots裡畫，變得比較簡單，但作業三在組合完後，一運作就解體了，目前還沒找出問題所在，希望我能順利模擬出來</p>
<p>期中自評影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/UjmaBqCYJ2E?si=xFnAmcLyWEJrgp3G" title="YouTube video player" width="560"></iframe></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41071202</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/cjRPVQMAG7w?si=Zpj0HyCAC4suzxCV" title="YouTube video player" width="560"></iframe></p>
<p>線架構圖</p>
<p><img alt="" height="315" src="/images/fourbar_exam1.png" width="560"/></p>
<p><a href="/downloads/exam1.zip">exam1.zip</a></p>
<p>1.加入Robot</p>
<p>2.在Robot底下的children加入Solid，再加入兩個Hingejoint，分別為joint1、joint4</p>
<p>3.Solid-children-Shape-geometry-Box，建立1、0.1、0.1的方塊(base)</p>
<p>4.Hingejoint-endPoint-Solid-children-Pose-children-Shape-geometry-Box，建立0.4、0.1、0.1的方塊(link1)</p>
<p>5.調整位置(-0.5、0、0.1)與角度(0、0、1、0.0349)學號後兩碼為02</p>
<p>6.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(-0.5、0、0)</p>
<p>7.加入RotationalMotor(motor)</p>
<p>8.在joint1底下的endPoint加入Hingejoint(joint2)</p>
<p>9.Hingejoint-endPoint-Solid-children-Pose-children-Shape-geometry-Box，建立0.6、0.1、0.1的方塊(link2)</p>
<p>10.在joint2的Solid底下再建一個0.3、0.1、0.1的方塊</p>
<p>11.調整位置(0.4、0、0.1)與角度(0、0、1、1.67)</p>
<p>12.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(0.4、0、0)</p>
<p>13.在joint2底下的endPoint加入Hingejoint(joint3)</p>
<p>14.Hingejoint-endPoint-Solid-children-Pose-children-Shape-geometry-Box，建立0.9、0.1、0.1的方塊(link3)</p>
<p>15.調整位置(0.6、0、-0.1)與角度(0、0、-1、2.4)</p>
<p>16.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(0.6、0、0)</p>
<p>17.在Robot底下的children加入Hingejoint(joint4)</p>
<p>18.Hingejoint-endPoint-SolidReference-link3</p>
<p>19.調整axis(0、0、1)、anchor(1、0、0)</p>
<p>20.加入三個桿件的boundingObject和physics</p>
<p>21.boundingObject-Pose-children-USE</p>
<p>22.加入controller</p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 41071202</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/eSeN3_SUjqE?si=bvWhqApOVif_onLD" title="YouTube video player" width="560"></iframe></p>
<p>solvespace 零件繪製與組合</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/3rDGwifmuXs?si=u-4M1WCT8Z6WvUrd" title="YouTube video player" width="560"></iframe></p>
<p>webots 操作流程</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/kHzfPoJMgwc?si=oSIuwrfuDn2cTNNt" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/exam2.zip">exam2.zip</a></p>
<p>1.加入Robot</p>
<p>2.在Robot底下的children加入兩個Solid(base1、base2)，再加入兩個Hingejoint(joint1、joint4)</p>
<p>3.Solid-children-CadShape，匯入base1、base2</p>
<p>4.Hingejoint-endPoint-Solid-children-Shape-geometry-Mesh，匯入主動桿(長度為1.02m)</p>
<p>5.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)</p>
<p>6.加入RotationalMotor(motor)</p>
<p>7.在joint1底下的endPoint加入Hingejoint(joint2)</p>
<p>8.Hingejoint-endPoint-Solid-children-CadShape，匯入link2</p>
<p>9.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(1.0194、0.0356、0)</p>
<p>10.在joint2底下的endPoint加入Hingejoint(joint3)</p>
<p>11.Hingejoint-endPoint-Solid-children-CadShape，匯入link3</p>
<p>12.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(0.8462、1.5256、0)</p>
<p>13.在Robot底下的children加入Hingejoint(joint4)</p>
<p>14.Hingejoint-endPoint-SolidReference-link3</p>
<p>15.調整axis(0、0、1)、anchor(2.5、0、0)</p>
<p>16.加入boundingObject和physics</p>
<p>17.boundingObject-Mesh</p>
<p>18.加入controller</p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>影片標題: <span>國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 41071202</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/gk6x_n94lPE?si=_XDVnwbGaACkE_wy" title="YouTube video player" width="560"></iframe><span> </span></p>
<p>影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 41071202</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/nkiq1ZZDeoA?si=OiqHxlGicqEfBlbJ" title="YouTube video player" width="560"></iframe></p>
<p>影片標題:國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 41071202</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/MezUtxsJcHA?si=A6G6hOOSEeSwveZG" title="YouTube video player" width="560"></iframe></p>
<p>3-1、3-2</p>
<p>1.設定個人 IPv6 位址</p>
<p>2.以 webotsw --stream 啟動 HW1 和七段顯示器的模擬系統</p>
<p>3.連上這個網站 http://[2001:288:6004:17:fff1:cd25:0000:b012]:1234/index.html</p>
<p>4.在 connect to 打上 ws://[2001:288:6004:17:fff1:cd25:0000:b012]:1234</p>
<p>5.即可以瀏覽器檢視學員的 webots 畫面</p>
<p>6.重複步驟四，依序輸入組員的編號</p>
<p>3-3</p>
<p>1.先變更個人 IPv6 位址</p>
<p>2.執行 set WEBOTS_HOME=y:\Webots_2025a 指令</p>
<p>3.再執行 webots --stream 指令</p>
<p>4.連上 http://[2001:288:6004:17:fff1:cd25:0000:b012]:1234/index.html 網站</p>
<p>5.connect to 打上 ws://[2001:288:6004:17:fff1:cd25:0000:b006]:1234 檢視組長 webots 的畫面</p>
<p>6.在其他命令提示字元視窗執行 pip install websocket-client websocket-server keyboard 指令</p>
<p>7.再執行python youbot_cart_client.py</p>
<p>8.把 python youbot_cart_client.py 丟到 SciTE 裡 Tools-Go</p>
<p>9.執行完畢即可控制車輛</p>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 41071202 - 製作過程</span><span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/RJQ3q-8tM70?si=9rCQOGAVDp0Flb1B" title="YouTube video player" width="560"></iframe></p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 41071202 - 結果測試<br/></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/RJQ3q-8tM70?si=3dBS5rEqaOGDBtMA" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #ffcc00;">操作過程：</span></p>
<p>在投籃輪車上加入一塊板子後，上面再放投籃機和籃框，利用WASD控制籃框、上下左右鍵控制投籃機移動，O鍵生成一顆靜止球，M鍵將球變成動態後擊出，J鍵將投籃機回復初始狀態，球投進籃框後會顯示得分，並在七段顯示器計分板上改變分數，進一球得兩分，分數會向上累加，上限是999</p>
<p><span style="background-color: #ffcc00;">心得：</span></p>
<p>期末報告真的很複雜，要把之前做過的東西整合在一起，花費我們好幾個禮拜的時間，還有請程式較擅長的朋友來幫忙，加上AI的建議，才能壓線完成，雖然過程有點辛苦，但學到不少東西，之後說不定能派上場</p>
<p>被叫去前面回答問題時，因為太緊張腦袋一片空白，回來跟同學分享後，才想到我可以那樣回答，所以我想把問題再回答一次</p>
<p>問題<span>1</span>：怎麼從近端推維護</p>
<p>先git clone url ，url 換成你 repository 的網址，接著改檔案，改完後打 git add .，再輸入 git commit "commit內容"，最後 git push</p>
<p><span>問題</span><span>2</span><span>：靜止的球可以擊出嗎</span></p>
<p><span>不行，靜止的不管怎麼揮都不會動，按M鍵後球會變成動態的，這時候才能擊出</span></p>
<p><span>問題3：七段顯示器的數字怎麼改變的</span></p>
<p><span>他透過陣列選擇要控制哪一段的顏色</span></p>
<p><span style="color: #000000; background-color: #ffcc00;">報告檔案</span></p>
<p><iframe frameborder="0" height="300px" src="https://nfuedu-my.sharepoint.com/personal/41071202_nfu_edu_tw/_layouts/15/Doc.aspx?sourcedoc={6afa5547-ca3c-4f7e-acd5-71e0f947de66}&amp;action=embedview&amp;wdAr=1.7777777777777777" width="450px">這是 <a href="https://office.com/webapps" target="_blank">Office</a> 提供的內嵌 <a href="https://office.com" target="_blank">Microsoft Office</a> 簡報。</iframe></p>
<p><a href="/downloads/final協同產品設計實習1.pdf">final協同產品設計實習.pdf</a></p>
<p><a href="/downloads/final.zip">final.zip</a></p><h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>