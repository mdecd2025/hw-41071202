var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:  https://mdecd2025.github.io/hw-41071202/content/index.html \n 學員作業倉儲:  https://github.com/mdecd2025/hw-41071202 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Tasks', 'text': 'task1 與 task2 任務目的在建立可於近端維護個人作業與協同作業的準備工作: \n \xa0 \xa0 \xa0 task1 (自行製作可攜程式系統) \n \xa0 \xa0 \xa0 task2 (使用 SSH 協定執行作業倉儲的推送) \n task3 與 task4 則為 HW2 的內容之一 \n \xa0 \xa0 \xa0 task3 (使用 Solvespace 建立平面四連桿系統零組件) \n \xa0 \xa0 \xa0 task4 (使用 Onshape 建立平面四連桿系統零組件) \n task5 與 task6 則為 HW3 的主要內容 \n \xa0 \xa0 \xa0 task5 (Webots Tutorial 1 ~3) \n \xa0 \xa0 \xa0 task6 (Webots Tutorial 4 ~6) \n', 'tags': '', 'url': 'Tasks.html'}, {'title': 'Wink', 'text': '操作影片： \n \n \n', 'tags': '', 'url': 'Wink.html'}, {'title': 'task1', 'text': '自行製作可攜程式系統 \n 操作影片: \n \n', 'tags': '', 'url': 'task1.html'}, {'title': 'repo', 'text': '此作業的目的在展示如何利用既有的 Python 可攜系統建立各版本的 Python 可攜環境 \n 操作影片： \n \n \n 說明如何取得個人作業倉儲並透過 TOKEN 修改內容： \n \n', 'tags': '', 'url': 'repo.html'}, {'title': 'list', 'text': '# 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2b.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2b-g8", href="https://mdecd2025.github.io/2b-g8/")+ html.A("(repo)", href="https://github.com/mdecd2025/2b-g8")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41023215", href="https://mdecd2025.github.io/hw-41023215/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023215")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41023216", href="https://mdecd2025.github.io/hw-41023216/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023216")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41023213", href="https://mdecd2025.github.io/hw-41023213/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023213")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41071203", href="https://mdecd2025.github.io/hw-41071203/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071203")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41071204", href="https://mdecd2025.github.io/hw-41071204/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071204")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41071202", href="https://mdecd2025.github.io/hw-41071202/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071202")\n \n \n 個人: \n \n 2b: \n 學員網站連結  |  學員倉儲連結 \n 分組: \n \n 2b: \n g8 網站  |  g8 倉儲 \n \n 所有倉儲及網站連結 \n \n', 'tags': '', 'url': 'list.html'}, {'title': 'IPv6', 'text': '以下為設定個人 IPv6 之步驟： \n 1.在可攜環境裡的 tmp 新增資料夾 \n 2.設定個人 IPv6 位址與 DNS 伺服器位址 \n \xa0 \xa02a 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:a0 01 \xa0 \xa02b 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:b0 01 \xa0 \xa0gateway: 2001:288:6004:17::254 \xa0 \xa0dns server: \xa0 \xa02001:288:6004:17::3 \xa0 \xa02001:b000:168::1 \n 3.開啟 init.py 更改 IP \n 4.在 命令列裡打 cms 之指令 \n 5.此網址為個人位址的學員網站(9441) \n 6.打\xa0 python -m http.server 之指令 \n 7.連到學員靜態網站(8000) \n 操作影片： \n \n \n 2b IPv6 port 8000連線列表 \n 連線結果 \n', 'tags': '', 'url': 'IPv6.html'}, {'title': 'task2', 'text': '使用 SSH 協定執行作業倉儲的推送 \n SSH \xa0 是一種加密的網路傳輸協定, PuTTY 則是可用於 Windows 環境的 SSH 協定工具, 其中支援遠端登入 (putty.exe) 與檔案傳輸工具 (psftp.exe). \n 使用 PuTTY 所建立的公私鑰進行 Github push 認證 \n 操作影片： \n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'w3', 'text': '2a \n 2a尚未納組的學員學號： \n 41023220 41223111 41223119 41223124 41223148 \n 2b \n 2b尚未納組的學員學號： \n 40923137 41023237 41223210 41223214 41223232 41223233 41223239 41271217 41271236 \n', 'tags': '', 'url': 'w3.html'}, {'title': 'task3', 'text': '使用 Solvespace 建立平面四連桿系統零組件 (HW2) \n base \n \n link1 \n \n link2 \n \n link3 \n \n shaft1 \n \n shaft2 \n \n fourbar \n \n fourbar assembly \n \n', 'tags': '', 'url': 'task3.html'}, {'title': 'task4', 'text': '使用 Onshape 建立平面四連桿系統零組件 (HW2) \n 1.在 onshape 上繪製零件 \n 2.將零件檔匯出成  .OBJ \n 3.在 webots 上組裝零件 \n \n 調整後之結果 \n \n', 'tags': '', 'url': 'task4.html'}, {'title': 'w4', 'text': '建立四連桿機構 \n \n 調整參數後之結果 \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'task5', 'text': '', 'tags': '', 'url': 'task5.html'}, {'title': 'w7', 'text': 'shaft1 \n \n shaft2 \n \n shaft3 \n \n shaft4 \n \n base plate \n \n connected board \n \n press board \n \n shooter board \n \n shooter assembly \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 41071202 \n \n hw1.zip \n 相關提問: \n 1.在製作 HW1 之前是否實際練習 Tutorial1 與 Tutorial2? \n 這兩個教程能幫助我熟悉 Webots 的基本操作、機器人控制邏輯與感測器使用 \n 2.Webots 是什麼樣的軟體？它主要用途為何？ \n 是一款開源機器人模擬平台，主要用途為教學與學習機器人技術、研究與原型開發、測試控制演算法、開發智慧行為 \n 3.在 Tutorial1 中，學習者需要操作的主要機器人模型名稱是什麼？ \n 通常是 e-puck 或 Pioneer 3-DX \n 4.如何在 Webots 中建立並執行一個新的模擬世界（world）？ \n \n 開啟 Webots → 點選 File > New World \n 使用左側「場景樹」加入機器人與感測器 \n 存檔為 .wbt 檔 \n \xa0點選綠色播放鍵（Run simulation）開始執行模擬 \n \n 5.請說明如何讓機器人在模擬中移動，並指出相關的程式控制方式。 \n 透過控制器的程式碼讓機器人移動；需要先用 getDevice() 抓取馬達，再設定速度 \n 6.Tutorial1 中，學習者需要修改哪些參數或檔案來控制機器人的行為？ \n \n 控制器程式碼 \n 馬達速度 \n timestep\xa0 \n 感測器啟用 \n \n \n 7.請簡述 Webots 控制器（controller）的功能及其與機器人的關係。 \n 控制器是一段程式碼，負責告訴機器人怎麼移動、偵測距離等；每個機器人都可以指定一個控制器 \n 8.在 Tutorial2 中，機器人需要完成什麼樣的任務或行為？ \n \n 使用感測器偵測障礙物 \n 自主避障 \n 改變移動方向 \n \n \n 9.Webots 中的 "Supervisor" 是什麼？它與一般機器人控制器有何不同？ \n 是特殊的控制器，可控制整個模擬世界；一般控制器只能控制自己所屬機器人 \n 10.請說明如何在 Webots 中進行感測器數據的讀取與應用（例如距離感測器、攝影機）。 \n sensor = robot.getDevice() sensor.enable(timestep) value = sensor.getValue() \n 11.若要延伸 Tutorial2 讓機器人具備自主避障能力，你會怎麼設計與實作？ \n 利用以下三點做設計改變 \n \n 啟用距離感測器 \n 設定閾值 \n 判斷感測值是否小於閾值 → 調整輪子速度 \n \n \n 12.請說明 Webots 中「時間步長（timestep）」的意義，以及它對模擬的影響。 \n 模擬的更新頻率，單位是毫秒，太大會降低模擬精度，太小則會影響效能。 \n 13.如何在 Webots 中為機器人新增感測器？請說明基本步驟。 \n \n 編輯 .wbt或使用場景樹新增感測器 \n 在控制器中啟用感測器 sensor.enable(timestep) \n 使用 getValue() 或其他讀值函式取得數據 \n \n \n 14.請說明如何將 Webots 控制器程式從 Python 改為 C 語言，並指出相關設定。 \n \n 建立 .c 控制器檔 \n 在機器人屬性中修改 controller 名稱 \n 設定 Makefile 編譯方式 \n 運行模擬，Webots 會自動執行該 C 控制器 \n \n \n 15.Tutorial1、2 中，若控制器程式有語法錯誤時，Webots 會如何反應？學員該如何排除？ \n 會在 console 中顯示錯誤訊息且機器人不執行行為，從錯誤訊息找到問題再去改程式碼 \n \n 16.如何將 Webots 世界（world）或機器人設定檔分享給他人，確保對方可順利開啟模擬？ \n \n 打包 .wbt 檔與 controllers/、split_parts/ 等資料夾 \n 壓縮成 ZIP 檔 \n 對方打開 .wbt 即可使用 \n \n \n 17.如果想讓機器人在模擬時產生聲音或播放音樂，Webots 提供哪些方法？ \n 使用 Speaker裝置 \n 18.請說明如何在 Webots 中同時操作多個機器人，並讓它們各自執行不同控制器。 \n 機器人指定不同 controller，就能同時操作 \n 19.在 Webots 控制器中，如何獲得機器人的當前座標位置與朝向？ \n 使用 GPS 或 Supervisor \n 20.請說明 Webots 控制器中感測器資料的單位（例如距離感測器、加速度計），以及如何正確解讀。 \n \n 距離感測器：通常為模擬單位 \n GPS：公尺 \n 加速度計：m/s² \n 海拔計：m（相對地面） \n \n \n 21.如果想要錄製 Webots 模擬畫面並輸出成影片檔，該如何操作？ \n \n Simulation > Movie > Start Recording，錄完後選擇 Save Movie 匯出 .mp4 \n 用 sharex、OBS 等軟體錄製 \n \n \n 22.Webots 中的 PROTO 文件有什麼作用？與 world 檔（.wbt）的關係為何？ \n .proto：定義可重用的機器人/元件模板；.wbt可引用 .proto 元件 \n \n \n 23.請說明如何在 Webots 中設定機器人的初始位置和方向。 \n 在場景樹中編輯 translation 和 rotation 的參數 \n 24.在 Tutorial1 或 Tutorial2 中，如何讓機器人執行預設外的自訂動作？ \n 可設計狀態機或加入觸發邏輯 \n 25.Webots 支援哪些主流程控制語言？各有何優缺點？ \n \n Python：簡單易學，適合初學者 \n C/C++：效能高、可擴充性強 \n Java、MATLAB：在特定應用中適用 \n \n \n 26.機器人控制器程式如何與其他程式（如資料記錄、遠端伺服器）進行通訊？ \n 使用 TCP/IP、WebSocket、或檔案 I/O 可與遠端伺服器通訊 \n \n 27.Webots 的模擬世界中燈光和陰影設定如何影響感測器或相機的數據？ \n 光線不足會影響相機或光度計讀值 \n 28.如何在 Webots 中調整機器人或感測器的物理參數（如質量、摩擦係數）？ \n 物件的\xa0physics 可進行調整 \n 29.請說明如何使用 Webots 的 Console 與 Debug 工具協助程式錯誤排除。 \n \n 用 print() 查看變數值 \n 用 step() 一步步執行模擬 \n \n \n \n 30.Tutorial1、2 裡的機器人遇到物體時，碰撞偵測機制如何運作？ \n 當物體發生物理碰撞時，可透過感測器讀取是否碰到物件 \n 31.若要將 Webots 模擬結果導出並進行數據分析，你會選擇哪些方法與工具？ \n 先在控制器中寫入 .csv 或 .txt 檔，在用 Python 匯出感測器資料 → 用 Excel、Pandas 分析 \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 41071202 \n \n hw2.zip \n Tutorial3 相關提問: \n 1.Tutorial3 的主要學習目標是什麼？ \n 學習使用地面感測器讓機器人辨識地面顏色，並根據偵測結果做出反應 \n 2.在 Tutorial3 中，如何讓機器人偵測地面顏色？ \n 透過機器人底部的 ground sensors 讀取地面反射的光強度，判斷是否為特定顏色 \n 3.Ground sensors 在 Webots 裡的作用為何？ \n 辨識地面顏色，應用在巡線、區域判斷 \n 4.如何在程式中取得 ground sensor 的數值？ \n sensor.getValue() 取得感測值 \n 5.Tutorial3 中的 e-puck 機器人如何根據地面顏色改變行為？ \n 依照不同感測器數值決定前進、轉向或停 \n 6.為什麼要對 ground sensor 的數值進行校正（calibration）？ \n 每個感測器在不同材質下的反射值不同，校正有助於準確偵測黑白界線，提高行為決策的可靠度 \n 7.如何設定 ground sensor 的 sampling period？ \n 使用 sensor.enable(time_step) \n 8.e-puck 機器人可以偵測哪些顏色？如何判斷？ \n 主要為黑與白，低值為黑，高值為白，設閾值判斷 \n 9.Tutorial3 如何讓 e-puck 在遇到黑線時做出反應？ \n 若感測值低於某值（如 <500）則進行轉向或停止 \n 10.若地面顏色偵測判斷有誤，可能原因有哪些？ \n 校正問題、光影干擾、地面材質影響、感測器未啟用 \n Tutorial4 相關提問: \n 1.Tutorial4 的核心任務是什麼？ \n 學習使用距離感測器來偵測前方或側邊的障礙物 \n 2.如何讓機器人偵測牆壁或障礙物？ \n 利用側邊或前方感測器感知距離 \n 3.Webots 的距離感測器（DistanceSensor）如何運作？ \n 發射紅外線，接收反射，距離越近值越大 \n 4.如何在程式中啟用並讀取 DistanceSensor 的數值？ \n 使用sensor.getValue() \n 5.Tutorial4 中，e-puck 機器人如何實作避障行為？ \n 根據感測數值高低控制輪速轉向 \n 6.距離感測器數值的單位是什麼？如何轉換？ \n 數值是無單位的比例，越近值越高；若要轉換成距離（mm/cm） \n 7.如何設定距離感測器的 sampling period？ \n 使用s ensor .enable(time_step) \n 8.當機器人同時偵測到左、右兩側有障礙物時，應如何設計行為？ \n 可後退再隨機轉向，或設優先方向 \n 9.為什麼避障時要考慮多個感測器的數值？ \n 提高判斷精準度，確定障礙方向與位置 \n 10.Tutorial4 若機器人無法正確避障，可能的解決方法有哪些? \n 感測器未啟用、閾值錯誤、邏輯錯、無碰撞模型 \n Tutorial5 相關提問: \n 1.Tutorial5 的主要內容主題為何？ \n 整合地面與距離感測器，完成更複雜任務 \n 2.如何讓機器人依照不同地面顏色或障礙物狀態做出不同反應？ \n 根據地面顏色或障礙物切換行為（巡線、避障） \n 3.Tutorial5 中如何結合多種感測器進行複雜任務？ \n 同時讀取多感測器數值，條件判斷切換狀態 \n 4.如何設計機器人巡線並同時避障？ \n 巡線時遇障礙切換避障，避完後恢復巡線 \n 5.若多種感測器回報衝突訊息，程式該如何決策？ \n 設計優先順序或使用有限狀態機（FSM）管理流程 \n 6.在 Tutorial5 裡，機器人如何完成任務流程的狀態切換？ \n 設定變數表示狀態，依條件改變狀態值 \n 7.如何在程式中設計有限狀態機（FSM）？ \n 用 if 或 match-case 結構撰寫控制邏輯 \n 8.Tutorial5 的挑戰題目有哪些？如何著手解決？ \n 在複雜地圖巡線避障或回到起點；明確定義狀態、逐步測試感測器與行為邏輯，加入偵錯輸出以監控狀態變化 \n 9.若要讓機器人自主完成一個完整路徑的巡邏任務，應加入哪些功能？ \n 路線記憶、狀態控制、回報任務點、環境識別等 \n 10.綜合 Tutorial3~5，請說明感測器資料融合（sensor fusion）的意義與應用。 \n 將多種感測器資料整合後再進行決策，提高準確性與穩定性，彌補單一感測器侷限；同時進行巡線與避障，可減少錯誤決策、提升自動化能力 \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 -\xa041071202 \n \n hw3.zip \n Tutorial6 相關提問: \n 1.Tutorial6 的主要學習主題是什麼？ \n 學習如何使用攝影機感測器 \n 2.在 Tutorial6 中，e-puck 機器人新增了哪些裝置？ \n 新增了攝影機感測器，用來捕捉前方環境的影像 \n 3.如何在 Webots 中使用攝影機（Camera）？ \n 在 Robot 下加入 Camera 節點，設定位置與方向，並在控制器程式中透過 API 啟用並讀取影像資料 \n 4.Camera 需要在程式中如何啟用？ \n 必須呼叫 camera.enable(timeStep) 函式來啟用 \n 5.如何取得攝影機擷取到的影像資料？ \n 使用 camera.getImage() 方法取得原始影像資料，或者 camera.getImageArray() 取得更方便處理的陣列形式 \n 6.Tutorial6 中，機器人如何依據攝影機影像做出反應？ \n 程式會分析影像像素的顏色或圖案資訊，判斷環境狀況或物件位置，並根據判斷結果調整機器人的行動 \n 7.Camera 裝置可以調整哪些參數？ \n 可調整解析度、視野角度、更新頻率，以及是否啟用自動曝光等 \n \n 8.影像解析度的設定會對模擬有什麼影響？ \n 解析度越高影像越清晰，但會增加運算負擔和延遲，降低模擬效率；解析度太低則影像細節不足 \n 9.如何將攝影機影像儲存成圖片檔？ \n 透過控制器程式讀取影像資料後，使用影像處理庫將影像資料轉成檔案格式並儲存 \n 10.若攝影機影像顯示異常，可能的原因有哪些？ \n 可能沒有正確啟用攝影機、時間步長設置錯誤、影像解析度不適合、模擬環境光源不足，或是程式錯誤導致影像資料未正常讀取 \n Tutorial7 相關提問: \n 1.Tutorial7 的核心任務是什麼？ \n 讓機器人學會利用攝影機辨識並追蹤特定顏色物體 \n 2.在本範例中 e-puck 機器人如何偵測顏色？ \n 透過擷取攝影機影像，分析像素的 RGB 值，篩選出特定顏色範圍的像素點來判斷顏色位置 \n 3.如何分析攝影機擷取的影像來辨識特定顏色？ \n 將影像從 RGB 空間轉換到 HSV 空間，利用 HSV 中的色調、飽和度和明度設定顏色範圍，篩選符合顏色條件的區域 \n 4.OpenCV 或其他影像處理函式庫在 Webots 控制器程式中的應用方式？ \n 可以在控制器程式中引入 OpenCV，使用其強大的影像處理功能來做顏色篩選、物件追蹤、形狀辨識等，增加影像分析的精確度 \n 5.如何將影像中的顏色資訊轉換為機器人行為？ \n 根據辨識到的顏色物件位置，調整機器人的移動方向或速度，實現追蹤或避障等行為 \n 6.若要辨識多種顏色，程式需考慮哪些步驟？ \n 需設定多個顏色範圍的 HSV 閾值，分別篩選不同顏色，再根據辨識結果決定優先追蹤的顏色或同時處理多色物件 \n \n 7.如何解決不同光源下顏色偵測的不穩定問題？ \n 利用 HSV 色彩空間可減少光照影響，調整色彩閾值範圍，或搭配自動白平衡與光照補償技術，提高辨識穩定性 \n 8.e-puck 機器人如何追蹤影像中的顏色物件？ \n 程式計算目標顏色區域的質心位置，透過調整左右輪速度讓目標保持在影像中心 \n 9.若影像中有多個同色物件，程式如何選擇追蹤目標？ \n 可選擇面積最大的區域、距離中心最近的區域，或依任務需求設定優先條件來決定追蹤哪個物件 \n 10.Tutorial7 能否應用於現實世界的機器人？需做哪些調整？ \n 能，但須針對真實環境調整顏色閾值、光照補償，且硬體部分需確保攝影機性能及運算能力足夠 \n Tutorial8 相關提問: \n 1.Tutorial8 的主要學習目標是什麼？ \n 學習使用 Supervisor 節點監督整個模擬環境，操控多個機器人，實現模擬監控、自動重置與資料紀錄等功能 \n 2.什麼是 Supervisor？在 Tutorial8 扮演什麼角色？ \n Supervisor 是一種特殊的控制器，能夠監控和操控模擬世界中的所有物件，協調多機器人的行為並執行高層次控制 \n 3.Supervisor 可以進行哪些操作？ \n 取得物件位置、修改物件狀態、重設機器人位置、讀取並寫入模擬環境資料、紀錄數據、控制模擬流程等 \n 4.如何在 Supervisor 控制器中存取並控制其他機器人？ \n 透過 getFromDef() 取得指定機器人節點，並使用 API 控制其位置、狀態或調用方法 \n 5.如何用 Supervisor 監測機器人是否達到目標區域？ \n 定期讀取機器人位置資訊，判斷是否進入目標區域的座標範圍，並根據結果執行後續動作 \n 6.Supervisor 如何重設模擬或重置機器人位置？ \n 使用 supervisor.simulationReset() 重置模擬，或透過改變機器人節點的座標屬性來重置位置 \n 7.Supervisor 能否獲取所有物件的座標與狀態？如何實作？ \n 可以，使用 getRoot() 取得場景樹，再透過節點遍歷取得所有物件的資訊 \n 8.如何紀錄機器人模擬過程的數據供日後分析？ \n \n Supervisor 可以在控制器中寫入資料到檔案，如座標、狀態、感測器讀數等，保存模擬紀錄 \n 9.Supervisor 可以如何協助自動化測試機器人行為？ \n \n 透過腳本自動控制場景、監控行為達成狀況、自動重置環境並記錄結果，實現測試流程的自動化 \n 10.綜合 Tutorial6~8，請說明感知（感測）、決策（控制器）、監督（Supervisor）三者如何協同運作。 \n 感知：透過攝影機等感測器擷取環境資料，讓機器人能看見周圍狀況 \n 決策：控制器分析感測資料，做出行為判斷與決策，控制機器人移動、避障或追蹤目標 \n 監督：Supervisor 監控整體模擬狀況，可同時管理多個機器人，負責協調任務流程、重置環境及紀錄數據 \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n w1 建立個人倉儲與網站 \n w2\xa0自行製作可攜程式系統 \n w3 利用 wink 錄製 solvespace 操作影片 \n w4 IPv6 位址設定 \n w5 webots 建立四連桿(HW1) \n w6\xa0 webots 建立四連桿(HW1)、未納組名單 \n w7 webots 匯入四連桿(HW2) \n w8\xa0在\xa0solvespace 組合投籃機(HW3) \n w9 上傳自評影片與心得 \n 各週網頁內容: \n w1 建立個人倉儲與網站 \n w2 新增個人與小組的倉儲、網站連結、 上傳製作可攜程式系統影片 \n w3 利用 wink 錄製 solvespace 操作影片 \n w4 增加各學員的 倉儲與網站連結 \n w6 上傳\xa0 webots 建立四連桿(HW1)、IPv6 位址設定、repo、SSH、未納組名單 操作影片 \n w7 上傳在\xa0 solvespace、webots\xa0 組合四連桿(HW2)操作影片 \n w8  上傳在\xa0 solvespace \xa0組合投籃機(HW3)操作影片 \n w9 上傳自評影片與心得 \n 期中心得: \n 自製可攜程式系統是我第一個作業，看著教學影片和詢問組員，花了很多時間才完成，過程雖然辛苦但有滿滿的成就感，接下來的ssh和IPv6的設定做起來就比較容易，其他需要寫程式的作業，大部分都尋求AI的幫忙，後面幾週需要畫圖的只能靠自己了，作業一真的好難，跟同學研究很久還是沒辦法，最後跑去問老師才得到解答，老師也在下週進行詳細的說明，完成後發現並沒有想像中難，第一根會了其他根的步驟都差不多，作業二的零件是用匯入的，不用在webots裡畫，變得比較簡單，但作業三在組合完後，一運作就解體了，目前還沒找出問題所在，希望我能順利模擬出來 \n 期中自評影片: \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41071202 \n \n 線架構圖 \n \n exam1.zip \n 1.加入Robot \n 2.在Robot底下的children加入Solid，再加入兩個Hingejoint，分別為joint1、joint4 \n 3.Solid-children-Shape-geometry-Box，建立1、0.1、0.1的方塊(base) \n 4.Hingejoint-endPoint-Solid-children-Pose-children-Shape-geometry-Box，建立0.4、0.1、0.1的方塊(link1) \n 5.調整位置(-0.5、0、0.1)與角度(0、0、1、0.0349)學號後兩碼為02 \n 6.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(-0.5、0、0) \n 7.加入RotationalMotor(motor) \n 8.在joint1底下的endPoint加入Hingejoint(joint2) \n 9.Hingejoint-endPoint-Solid-children-Pose-children-Shape-geometry-Box，建立0.6、0.1、0.1的方塊(link2) \n 10.在joint2的Solid底下再建一個0.3、0.1、0.1的方塊 \n 11.調整位置(0.4、0、0.1)與角度(0、0、1、1.67) \n 12.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(0.4、0、0) \n 13.在joint2底下的endPoint加入Hingejoint(joint3) \n 14.Hingejoint-endPoint-Solid-children-Pose-children-Shape-geometry-Box，建立0.9、0.1、0.1的方塊(link3) \n 15.調整位置(0.6、0、-0.1)與角度(0、0、-1、2.4) \n 16.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(0.6、0、0) \n 17.在Robot底下的children加入Hingejoint(joint4) \n 18.Hingejoint-endPoint-SolidReference-link3 \n 19.調整axis(0、0、1)、anchor(1、0、0) \n 20.加入三個桿件的boundingObject和physics \n 21.boundingObject-Pose-children-USE \n 22.加入controller \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 -\xa041071202 \n \n solvespace 零件繪製與組合 \n \n webots 操作流程 \n \n exam2.zip \n 1.加入Robot \n 2.在Robot底下的children加入兩個Solid(base1、base2)，再加入兩個Hingejoint(joint1、joint4) \n 3.Solid-children-CadShape，匯入base1、base2 \n 4.Hingejoint-endPoint-Solid-children-Shape-geometry-Mesh，匯入主動桿(長度為1.02m) \n 5.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1) \n 6.加入RotationalMotor(motor) \n 7.在joint1底下的endPoint加入Hingejoint(joint2) \n 8.Hingejoint-endPoint-Solid-children-CadShape，匯入link2 \n 9.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(1.0194、0.0356、0) \n 10.在joint2底下的endPoint加入Hingejoint(joint3) \n 11.Hingejoint-endPoint-Solid-children-CadShape，匯入link3 \n 12.Hingejoint-jointParameters-HingejointParameters，調整axis(0、0、1)、anchor(0.8462、1.5256、0) \n 13.在Robot底下的children加入Hingejoint(joint4) \n 14.Hingejoint-endPoint-SolidReference-link3 \n 15.調整axis(0、0、1)、anchor(2.5、0、0) \n 16.加入boundingObject和physics \n 17.boundingObject-Mesh \n 18.加入controller \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 影片標題:\xa0 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 41071202 \n   \n 影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 41071202 \n \n 影片標題:國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 41071202 \n \n 3-1、3-2 \n 1.設定個人 IPv6 位址 \n 2.以 webotsw --stream 啟動 HW1 和七段顯示器的模擬系統 \n 3.連上這個網站 http://[2001:288:6004:17:fff1:cd25:0000:b012]:1234/index.html \n 4.在 connect to 打上 ws://[2001:288:6004:17:fff1:cd25:0000:b012]:1234 \n 5.即可以瀏覽器檢視學員的 webots 畫面 \n 6.重複步驟四，依序輸入組員的編號 \n 3-3 \n 1.先變更個人 IPv6 位址 \n 2.執行 set WEBOTS_HOME=y:\\Webots_2025a 指令 \n 3.再執行 webots --stream 指令 \n 4.連上 http://[2001:288:6004:17:fff1:cd25:0000:b012]:1234/index.html 網站 \n 5.connect to 打上 ws://[2001:288:6004:17:fff1:cd25:0000:b006]:1234 檢視組長 webots 的畫面 \n 6.在其他命令提示字元視窗執行 pip install websocket-client websocket-server keyboard 指令 \n 7.再執行python youbot_cart_client.py \n 8.把 python youbot_cart_client.py 丟到 SciTE 裡 Tools-Go \n 9.執行完畢即可控制車輛 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 41071202 - 製作過程 \n \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 41071202 - 結果測試 \n \n 操作過程： \n 在投籃輪車上加入一塊板子後，上面再放投籃機和籃框，利用WASD控制籃框、上下左右鍵控制投籃機移動，O鍵生成一顆靜止球，M鍵將球變成動態後擊出，J鍵將投籃機回復初始狀態，球投進籃框後會顯示得分，並在七段顯示器計分板上改變分數，進一球得兩分，分數會向上累加，上限是999 \n 心得： \n 期末報告真的很複雜，要把之前做過的東西整合在一起，花費我們好幾個禮拜的時間，還有請程式較擅長的朋友來幫忙，加上AI的建議，才能壓線完成，雖然過程有點辛苦，但學到不少東西，之後說不定能派上場 \n 被叫去前面回答問題時，因為太緊張腦袋一片空白，回來跟同學分享後，才想到我可以那樣回答，所以我想把問題再回答一次 \n 問題 1 ：怎麼從近端推維護 \n 先git clone url ，url 換成你 repository 的網址，接著改檔案，改完後打 git add .，再輸入 git commit "commit內容"，最後 git push \n 問題 2 ：靜止的球可以擊出嗎 \n 不行，靜止的不管怎麼揮都不會動，按M鍵後球會變成動態的，這時候才能擊出 \n 問題3：七段顯示器的數字怎麼改變的 \n 他透過陣列選擇要控制哪一段的顏色 \n 報告檔案 \n 這是  Office  提供的內嵌  Microsoft Office  簡報。 \n final協同產品設計實習.pdf \n final.zip', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};